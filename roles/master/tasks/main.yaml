---
# 1-st control node
- name: Check if kubeadm has already run
  ansible.builtin.stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

- ansible.builtin.meta: end_play
  when: kubeadm_ca.stat.exists

- name: Create /etc/kubernetes directory
  ansible.builtin.file:
    path: /etc/kubernetes
    state: directory

- name: Copy kubeadm-config.yaml
  ansible.builtin.template:
    src: kubeadm-config.j2
    dest: /etc/kubernetes/kubeadm-config.yaml

- name: Init master control node
  ansible.builtin.shell: kubeadm init --config /etc/kubernetes/kubeadm-config.yaml
  register: kubeadm_init

# Add link
- name: Add directory for config file
  ansible.builtin.file:
    path: /root/.kube
    state: directory

- name: Add link for config file
  ansible.builtin.file:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    state: link

- name: Wait for coredns started
  ansible.builtin.shell:
    cmd: "kubectl -n kube-system get svc kube-dns -o jsonpath='{.spec.clusterIP}'"
  changed_when: false
  check_mode: false
  register: result
  until: result.rc == 0
  retries: 10
  delay: 30

# Nodelocaldns
- name: Get coredns service IP address
  ansible.builtin.shell: kubectl -n kube-system get svc kube-dns -o jsonpath='{.spec.clusterIP}'
  register: dns_ip

- ansible.builtin.set_fact:
    coredns_ip: "{{ dns_ip.stdout }}"

- name: Copy nodelocaldns manifest
  ansible.builtin.template:
    src: nodelocaldns-daemonset.j2
    dest: /etc/kubernetes/nodelocaldns-daemonset.yaml

- name: Deploy nodelocaldns
  ansible.builtin.shell: kubectl apply -f /etc/kubernetes/nodelocaldns-daemonset.yaml

# Calico
# - name: Check namespace tigera-operator
#   shell:
#     cmd: "kubectl get ns tigera-operator"
#   changed_when: false
#   check_mode: false
#   register: ns_result
#   until: ns_result.rc == 0
#   retries: 10
#   delay: 30

- name: Check for installed tigera-operator
  ansible.builtin.shell: kubectl get ns tigera-operator
  register: tigera_operator_out
  ignore_errors: true

- name: Install tigera-operator
  when: tigera_operator_out.rc == 1
  ansible.builtin.shell: "kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/{{ tigera_operator_version }}/manifests/tigera-operator.yaml"

- name: Copy calico-install.yaml
  ansible.builtin.template:
    src: calico-install.j2
    dest: /etc/kubernetes/calico-install.yaml

- name: Install Calico
  ansible.builtin.shell: kubectl apply -f /etc/kubernetes/calico-install.yaml

